// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Final_TerescencoAlexandru.DB;

#nullable disable

namespace Proiect_Final_TerescencoAlexandru.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250210173316_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Comment", b =>
                {
                    b.Property<int>("comment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("comment_Id"));

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("comment_text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("game_Id")
                        .HasColumnType("int");

                    b.Property<int>("user_Id")
                        .HasColumnType("int");

                    b.HasKey("comment_Id");

                    b.HasIndex("game_Id");

                    b.HasIndex("user_Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Reviewer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("comment_Id")
                        .HasColumnType("int");

                    b.Property<int>("screenshot_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("comment_Id");

                    b.HasIndex("screenshot_id")
                        .IsUnique();

                    b.ToTable("games");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Screenshot", b =>
                {
                    b.Property<int>("screenshots_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("screenshots_Id"));

                    b.Property<int>("game_Id")
                        .HasColumnType("int");

                    b.Property<string>("image_1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_10")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_5")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_6")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_7")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_8")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image_9")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("screenshots_Id");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.User", b =>
                {
                    b.Property<int>("user_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("user_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Comment", b =>
                {
                    b.HasOne("Proiect_Final_TerescencoAlexandru.Models.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("game_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect_Final_TerescencoAlexandru.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("user_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Game", b =>
                {
                    b.HasOne("Proiect_Final_TerescencoAlexandru.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("comment_Id");

                    b.HasOne("Proiect_Final_TerescencoAlexandru.Models.Screenshot", "Screenshot")
                        .WithOne("Game")
                        .HasForeignKey("Proiect_Final_TerescencoAlexandru.Models.Game", "screenshot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Screenshot");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Game", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.Screenshot", b =>
                {
                    b.Navigation("Game");
                });

            modelBuilder.Entity("Proiect_Final_TerescencoAlexandru.Models.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
